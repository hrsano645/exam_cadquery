import cadquery as cq
from ocp_vscode import show_object


# 各寸法の値をハードコーディングする代わりに、これらを変更できます。
width = 3.0  # プレートの幅
height = 4.0  # プレートの高さ
thickness = 0.25  # プレートの厚さ
polygon_sides = 6  # ポリゴンの辺の数
polygon_dia = 1.0  # ポリゴンの頂点を囲む円の直径

# 2つのポリゴンを切り抜いたプレートを作成します
# 1. オブジェクトを構築するための作業平面を確立します。
# 1a. "front"という名前の平面方向を使用して作業平面を定義します。これは、
#     正のZ方向が「上」であり、負のZ方向が「下」であることを意味します。
# 2. 1つのbox（）操作でプレートを表す3Dボックスを作成します。
# 2a. ボックスは原点を中心に配置され、ポリゴンの切り抜きが行われるときに直感的でない結果が生じる可能性があります。
# 3. スタックに2つのポイントをプッシュし、ポリゴンの穴の中心として使用します。
# 4. ポリゴンは、辺の数とポリゴンを囲む円を使用して、各ポイントごとに1つずつ作成されます。
# 5. ポリゴンは、押し出しのライン上にあるすべてのオブジェクトを切り抜きます。
# 5a. フェースは選択されていないため、ポリゴンは作業平面上に作成されます。
#     ボックスが原点を中心に配置されているため、ポリゴンはボックスの中心になります。
#     これにより、ポリゴンは中心から外側に向かって正の方向に切り抜かれます。
# 6. ポリゴンは、ボックス/プレートの中心から「下方向」（法線の逆方向）に向かって切り抜かれます。
#     cutBlind（）などの関数は正の切り抜き方向を想定していますが、cutThruAll（）は切り抜きが最大方向から始まり、
#     その最大方向から下方向に向かってすべてのオブジェクトを切り抜くことを想定しています。
result = cq.Workplane("front").box(width, height, thickness)

show_object(result, "box")

result = result.pushPoints([(0, 0.75), (0, -0.75)]).polygon(polygon_sides, polygon_dia)

# このスクリプトの結果を表示します
show_object(result, "polycon")

result = result.cutThruAll()

# このスクリプトの結果を表示します
show_object(result, "all")
